#!/bin/bash
####========================Version==Controll======================####
tlv=253
lwjglv=2.9.0
fitmcv=2.4
####============================Fuctions===========================####
#Check if Technic-Launcher is in the correct spot, if not then download
function logrm(){
	echo "Log Cleaner"
	cd $HOME/.technic/logs
	rm -v *
	cd $HOME/.technic
}
function installtl(){
	echo "Technic Installer"
	if [ ! -d "$HOME/.technic" ]
		then
			mkdir "$HOME/.technic"
	fi
	if [ ! -d "$HOME/.technic/FitMc" ]
		then
			notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Downloading Technic-Launcher' &
			mkdir "$HOME/.technic/FitMc"
	fi

	cd $HOME/.technic/FitMc
	if [ ! -f "tl-${tlv}.jar" ]; then
			rm *.jar
                	wget --progress=bar:force --no-cache "http://mirror.technicpack.net/launcher/${tlv}/TechnicLauncher.jar" -O tl-${tlv}.jar 2>&1 | zenity --progress --auto-close --auto-kill --title="Fetching Technic-Launcher..." 
			chmod +x tl-${tlv}.jar
		else
			imp
	fi
}

#Download Lwjgl
function dllwjgl(){
	echo "Lwjgl Downloader"
	if [ ! -d "lwjgl-${lwjglv}" ] ; then
		rm -rv "lwjgl-${lwjglv}"
		wget --progress=bar:force --no-cache "http://sourceforge.net/projects/java-game-lib/files/latest/download?source=files" -O lwjgl-${lwjglv}.zip 2>&1 | zenity --progress --auto-close --auto-kill --title="Fetching Lwjgl ${lwjglv}"
		unzip lwjgl-${lwjglv}.zip
		rm lwjgl-${lwjglv}.zip
		cd lwjgl-${lwjglv}
		rm -rv doc
		rm -rv res
		cd jar
		rm AppleJavaExtensions.jar asm-debug-all.jar lwjgl-debug.jar lwjgl_test.jar lwjgl_util_applet.jar lzma.jar
		cd ../native
		rm -rv macosx solaris windows freebsd
		cd $HOME/.technic/FitMc/
		lwjgl
	else
		lwjgl
	fi
}

#Install lwjgl
function lwjgl(){
	echo "Lwjgl Installer"
	imp
	cd lwjgl-${lwjglv}/
		killjava
	cd $HOME/.technic/FitMc/lwjgl-${lwjglv}/native/linux
		while read dir; do
			cp -rvs --remove-destination * "$dir"
		done < $HOME/.technic/FitMc/nativesf.txt
	cd $HOME/.technic/FitMc/lwjgl-${lwjglv}/jar
		cp -rvs --remove-destination * $HOME/.technic/cache
		while read dir; do
			cp -rvs --remove-destination * "$dir"
		done < $HOME/.technic/FitMc/binf.txt
	cd $HOME/.technic/FitMc/
		tl

}

# Start basic window manager and video settings
# Thank you Steam-login for this part
function swm(){
	echo "Window Manager Changer"
	notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Starting thin Window Manager' &
	xfwm4 --replace --daemon --compositor=off
	which nvidia-settings && nvidia-settings -l
	which gnome-settings-daemon && gnome-settings-daemon &
}

# Check if Window Manager is running
function cwm(){
	echo "Window Manager Checker"
	if [ "$(pidof xfwm4)" ]
	then
		killall nautilus
		killall compiz
		killall unity-panel-service
		killall unity-applications-daemon
		killall unity-files-daemon
		killall unity-gwibber-daemon
		killall unity-music-daemon
		killall unity-musicstore-daemon
		killall unity-shopping-daemon

		killall -9 nautilus
		killall -9 compiz
		killall -9 unity-panel-service
		killall -9 unity-applications-daemon
		killall -9 unity-files-daemon
		killall -9 unity-gwibber-daemon
		killall -9 unity-music-daemon
		killall -9 unity-musicstore-daemon
		killall -9 unity-shopping-daemon
	else
	swm
	sleep 5s
	cwm
fi
}

# Change back to Compiz
function swmb(){
	echo "Change Back To Compiz"
	notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Quiting' &
	compiz --replace &
}

# Check if Compiz restored
function cwmb(){
	echo "Check Compiz"
	if [ "$(pidof compiz)" ]
	then
		notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Goodbye'
	else
	swmb
	sleep 10s
	cwmb
fi
}

#Establishing technic as a function
function tl(){
	echo "Launching Technic"
        java -jar $HOME/.technic/FitMc/tl-${tlv}.jar
        }

#Set java kill command as function
function killjava(){
	echo "Kill Java"
        #nice kill
        killall -q java
        #force kill
        killall -q -9 java
	}

#Texture Pack Installer
function texture(){
	echo "Texture Installer"
	txtpk=`zenity --file-selection --title="Select a TexturePack"`
	case $? in
		0)
			imp
			if [ ! -d "$HOME/.technic/FitMc/txturpk" ]
				then
				mkdir "$HOME/.technic/FitMc/txturpk"
			fi
			mv ${txtpk} $HOME/.technic/FitMc/txturpk/
			cd $HOME/.technic/FitMc/txturpk/
			while read dir; do
				cp -rvs --remove-destination $HOME/.technic/FitMc/txturpk/* "$dir"
			done < $HOME/.technic/FitMc/texturesf.txt
			cd $HOME/.technic/FitMc/

			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "TexturePack installed" ;;
		1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "No file selected" ;;
		-1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "An unexpected error has occurred" ;;
esac
}
#Texture Remover
function trm(){
	echo "Texture Remover"
	unset trm2 trm3 trm4 trm6
	ls $HOME/.technic/FitMc/txturpk > $HOME/.technic/FitMc/trm1.txt
	while read -r trm2; do
		trm3+=("FALSE")
		trm3+=("$trm2")
	done < $HOME/.technic/FitMc/trm1.txt
	trm4=$(zenity --title="Texture Uninstaller" --list --radiolist --text "Select Texture To remove" --column '' --column "Texture" "${trm3[@]}" --separator=":")
	find $HOME/.technic/ -name "$trm4" -type l > $HOME/.technic/FitMc/trm5.txt
	while read -r trm6; do
		rm -v ${trm6}
	done < $HOME/.technic/FitMc/trm5.txt
	cd $HOME/.technic/FitMc/
	txtpk2=`zenity --question --title= "Texture Pack Uninstaller" --text="Would you like to Have a coppy of the file in your desktop?"`
	case $? in
		0)
			if [ ! -d "$HOME/Desktop/FitMc-texture" ]
			then
				mkdir "$HOME/Desktop/FitMc-texture"
			fi
			mv -v txturpk/$trm4 $HOME/Desktop/FitMc-texture
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Texture pack Uninstalled and Backed up" ;;
		1)
			rm -v txturpk/$trm4
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Texture pack Uninstalled" ;;
		-1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "An unexpected error has occurred" ;;
	esac
	rm -v "trm1.txt" -f
	rm -v "trm5.txt" -f
}

#Mod Installer
function mod(){
	echo "Mod Installer"
	imp
	modpk=`zenity --file-selection --title="Select Your mod file"`
	case $? in
		0)
			if [ ! -d "$HOME/.technic/FitMc/mod-folder-back" ]
				then
				mkdir "$HOME/.technic/FitMc/mod-folder-back"
			fi
			unset mdpklist modsf
			cp ${modpk} $HOME/.technic/FitMc/mod-folder-back
			while read -r modsf; do
				mdpklist+=("$modsf")
				mdpklist+=("FALSE")
			done < $HOME/.technic/FitMc/modsf.txt
			modsel=$(zenity --title= "ModPack Select" --list --radiolist --text "Select The Modpack to install the mod to" --column '' --column "Option" "${mdpklist[@]}" --separator=":")
			mv -v ${modpk} ${modsel}
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Mod installed" ;;
		1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "No file selected" ;;
		-1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "An unexpected error has occurred" ;;
esac
}

#Mod Remover
function mrm(){
	echo "Mod Remover"
	unset trm2 trm3 trm4 trm6
	ls $HOME/.technic/FitMc/mod-folder-back > $HOME/.technic/FitMc/mrm1.txt
	while read -r mrm2; do
		mrm3+=("FALSE")
		mrm3+=("$mrm2")
	done < $HOME/.technic/FitMc/mrm1.txt
	mrm4=$(zenity --title="Mod Uninstaller" --list --radiolist --text "Select Mod To remove" --column '' --column "Mod" "${mrm3[@]}" --separator=":")
	find $HOME/.technic/ -name $mrm4 -type l > $HOME/.technic/FitMc/mrm5.txt
	while read -r mrm6; do
		rm -v ${mrm6}
	done < $HOME/.technic/FitMc/mrm5.txt
	cd $HOME/.technic/FitMc/
	modpk2=`zenity --question --title"Mod Uninstaller" --text="Would you like to Have a coppy of the file in your desktop?"`
	case $? in
		0)
			if [ ! -d "$HOME/Desktop/FitMc-mod" ]
			then
				mkdir "$HOME/Desktop/FitMc-mod"
			fi
			mv -v mod-folder-back/$mrm4 $HOME/Desktop/FitMc-mod
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Mod Uninstalled and Backed up" ;;
		1)
			rm -v mod-folder-back/$mrm4
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Mod Uninstalled" ;;
		-1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "An unexpected error has occurred" ;;
	esac
	rm -v "mrm1.txt" -f
	rm -v "mrm5.txt" -f
}


function imp(){
	echo "Installed Mod Packs checker"
	cd $HOME/.technic/FitMc/
	rm -v binf.txt nativesf.txt texturesf.txt modsf.txt
	find $HOME/.technic/ -name 'bin' -type d > binf.txt
	find $HOME/.technic/ -name 'natives' -type d > nativesf.txt
	find $HOME/.technic/ -name 'texturepacks' -type d > texturesf.txt
	find $HOME/.technic/ -name 'mods' -type d > modsf.txt
}


####===========================Gui=================================####
#Menus
menu () {
	echo "Menu"
	int=`zenity --title="FitMc ${fitmcv}" --window-icon="/usr/share/pixmaps/FitMc-logo.png" --height=326 --width=250 --list --radiolist --text 'FitMc Options:' --column '' --column 'Option' FALSE "$opt1" FALSE "$opt2" FALSE "$opt3" FALSE "$opt4" FALSE "$opt5" FALSE "$opt6" FALSE "$opt7" FALSE "$opt8" FALSE "$opt9"`

if [ "$int" == "$opt1" ]
	then
		int2=`zenity --title="Texture Option" --list --radiolist --text 'Chose What to do' --column '' --column 'Option' FALSE "Install" FALSE "Uninstall"`
		if [ "$int2" == "Install" ]; then
			texture
		fi
		if [ "$int2" == "Uninstall" ]; then
			trm
		fi
		menu
fi
if [ "$int" == "$opt2" ]
	then
		int2=`zenity --title="Mod Option" --list --radiolist --text 'Chose What to do' --column '' --column 'Option' FALSE "Install" FALSE "Uninstall"`
		if [ "$int2" == "Install" ]; then
			mod
		fi
		if [ "$int2" == "Uninstall" ]; then
			mrm
		fi
		menu
fi
if [ "$int" == "$opt3" ]
	then
		notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Attempting to Fix Key problem" &
		dllwjgl
	menu
fi
if [ "$int" == "$opt4" ]
        then
                notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Restarting Technic Launcher" &
                killjava
                #start Technic again
                tl
        menu
fi
if [ "$int" == "$opt5" ]
	then
		killjava
		rm tl-${tlv}.jar
		installtl
		tl
		tbmenu
fi
if [ "$int" == "$opt6" ]
	then
		notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Forcing Modpack to Redownload on next launch" &
		killjava
		find $HOME/.technic/ -name 'cache' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'bin' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'lib' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'coremods' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'mods' -type d  | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'resources' -type d | while read dir; do
			rm -rv "$dir"
		done
		tl
	menu
fi
if [ "$int" == "$opt7" ]
        then
                killjava
		cwmb
		cd $HOME/
        exit
fi
if [ "$int" == "$opt8" ]
        then
                /usr/lib/indicator-session/gtk-logout-helper --shutdown 
        menu
fi
if [ "$int" == "$opt9" ]
	then
		version=`zenity --window-icon="/usr/share/pixmaps/FitMc-logo.png" --info --title "Versions" --text="\`printf "Technic Launcher: ${tlv} \n LWJGL: ${lwjglv}"\`"`
		menu
fi
}

#Main menu options
opt1="TexturePack Options"
opt2="Mod Options"
opt3="Fix Sticky Keys"
opt4="Restart Launcher"
opt5="Force Launcher Redownload"
opt6="Force Modpack Redownload"
opt7="Quit FitMc"
opt8="Power System off"
opt9="Versions"

####==========================Script===============================####

cd $HOME/.technic/FitMc/
killjava
installtl
logrm
if [[ $@ == *nocwm* ]]; then
	notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Starting without Thin Window Manager"
	else
	cwm
fi
tl


notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Starting Option menu and technic launcher"

menu
menu
menu
zenity --warning --text "Menu will only open one last time
please exit properly"
menu
killjava
cwmb
cd $HOME/ 
