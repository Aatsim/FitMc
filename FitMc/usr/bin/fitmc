#!/bin/bash
####========================Version==Controll======================####
fitmc=2
tlv=236
lwjglv=2.9.0
####============================Fuctions===========================####
#Check if Technic-Launcher is in the correct spot, if not then download
function installtl(){
	if [ ! -d "$HOME/.technic" ]
		then
			mkdir "$HOME/.technic"
	fi
	if [ ! -d "$HOME/.technic/FitMc" ]
		then 
			notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Downloading Technic-Launcher' &
			mkdir "$HOME/.technic/FitMc"
	fi

	cd $HOME/.technic/FitMc
	if [ ! -f "tl-${tlv}.jar" ]; then
			rm "tl-*.jar"
                	wget --progress=bar:force --no-cache "http://mirror.technicpack.net/launcher/${tlv}/TechnicLauncher.jar" -O tl-${tlv}.jar 2>&1 | zenity --progress --auto-close --auto-kill --title="Fetching Technic-Launcher..." 
			chmod +x tl-${tlv}.jar
		else
			imp
			rm -rv "*.log"
	fi
}

#Download Lwjgl
function dllwjgl(){
	if [ ! -d "lwjgl-${lwjglv}" ] ; then
		rm -rv "lwjgl-${lwjglv}/"
		wget --progress=bar:force --no-cache "http://sourceforge.net/projects/java-game-lib/files/latest/download?source=files" -O lwjgl-${lwjglv}.zip 2>&1 | zenity --progress --auto-close --auto-kill --title="Fetching Lwjgl ${lwjglv}"
		unzip lwjgl-${lwjglv}.zip	
		rm lwjgl-${lwjglv}.zip
		cd lwjgl-${lwjglv}
		rm -rv doc
		rm -rv res
		cd jar
		rm AppleJavaExtensions.jar asm-debug-all.jar lwjgl-debug.jar lwjgl_test.jar lwjgl_util_applet.jar lzma.jar
		cd ../native
		rm -rv macosx solaris windows freebsd
		cd $HOME/.technic/FitMc/
		lwjgl
	fi	
}

#Install lwjgl
function lwjgl(){
	cd lwjgl-${lwjglv}/
		killjava
	cd $HOME/.technic/FitMc/
		while read dir; do
			cp -rvs $HOME/.technic/FitMc/lwjgl-${lwjglv}/native/linux "$dir"
		done < nativesf.txt
		while read dir; do
			cp -rvs $HOME/.technic/FitMc/lwjgl-${lwgjlv}/jar "$dir"
		done < binf.txt
		tl

}

# Start basic window manager and video settings
# Thank you Steam-login for this part
function swm(){
	notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Starting thin Window Manager' &
	xfwm4 --replace --daemon --compositor=off
	which nvidia-settings && nvidia-settings -l 
	which gnome-settings-daemon && gnome-settings-daemon &
}

# Check if Window Manager is running
function cwm(){
	if [ "$(pidof xfwm4)" ]
	then
		killall nautilus
		killall compiz
		killall unity-panel-service
		killall unity-applications-daemon
		killall unity-files-daemon
		killall unity-gwibber-daemon
		killall unity-music-daemon
		killall unity-musicstore-daemon
		killall unity-shopping-daemon

		killall -9 nautilus
		killall -9 compiz
		killall -9 unity-panel-service
		killall -9 unity-applications-daemon
		killall -9 unity-files-daemon
		killall -9 unity-gwibber-daemon
		killall -9 unity-music-daemon
		killall -9 unity-musicstore-daemon
		killall -9 unity-shopping-daemon
	else
	swm
	sleep 5s
	cwm
fi
}

# Change back to Compiz
function swmb(){
	notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Quiting' &
	compiz --replace &
}

# Check if Compiz restored
function cwmb(){
	if [ "$(pidof compiz)" ]
	then
		notify-send -i /usr/share/pixmaps/FitMc-logo.png 'FitMc:' 'Goodbye'
	else
	swmb
	sleep 10s
	cwmb
fi
}

#Establishing technic as a function
function tl(){
        java -jar $HOME/.technic/FitMc/tl-${tlv}.jar
        }

#Set java kill command as function
function killjava(){
        #nice kill
        killall java
        #force kill
        killall -9 java
	}

#Texture Pack Installer
function texture(){
	txtpk=`zenity --file-selection --title="Select a TexturePack"`
	case $? in
		0)
			if [ ! -d "texturepacks" ]
				then
				mkdir "texturepacks"
			fi
			mv ${txtpk} $HOME/.technic/FitMc/texturepacks/.
			while read dir; do
				cp -rvs $HOME/.technic/FitMc/texturepacks/ "$dir"
			done < texturesf.txt

			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "TexturePack installed" ;;
		1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "No file selected" ;;
		-1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "An unexpected error has occurred" ;;
esac
}

#Mod Installer
function mod(){
	modpk=`zenity --file-selelction --title="Select Your mod file"`
	case $? in
		0)
			if [ ! -d "modfolder" ]
				then
				mkdir "modfolder"
			fi
			unset list
			while read -r line; do
				list+=("FALSE")
				list+=("$line")
			done < modsf.txt
			modsel=$(zenity --title="ModPack Select" --list --radiolist --text "Select The Modpack to install the mod to" --column 'Option' "${list[@]}")
			mv -v ${modpk} ${modsel}
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Mod installed" ;;
		1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "No file selected" ;;
		-1)
			notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "An unexpected error has occurred" ;;
esac
}


function imp(){
	rm -v binf.txt nativesf.txt texturesf.txt modsf.txt
	find $HOME/.technic/ -name 'bin' -type d > binf.txt
	find $HOME/.technic/ -name 'natives' -type d > nativesf.txt
	find $HOME/.technic/ -name 'texturepacks' -type d > texturesf.txt
	find $HOME/.technic/ -name 'mods' -type d > modsf.txt
}


####===========================Gui=================================####
#Menus
menu () {
	int=`zenity --title="FitMc" --window-icon="/usr/share/pixmaps/FitMc-logo.png" --height=326 --width=250 --list --radiolist --text 'FitMc Options:' --column '' --column 'Option' FALSE "$opt1" FALSE "$opt2" FALSE "$opt3" FALSE "$opt4" FALSE "$opt5" FALSE "$opt6" FALSE "$opt7" FALSE "$opt8" FALSE "$opt9"`

if [ "$int" == "Quit FitMc" ]
        then
                killjava
		cwmb 
		cd $HOME/
        exit
fi
if [ "$int" == "Power System off" ]
        then
                /usr/lib/indicator-session/gtk-logout-helper --shutdown 
        menu
fi
if [ "$int" == "Install a TexturePack" ]
	then
		texture
		menu
fi
if [ "$int" == "Install a Mod" ]
	then
		mod
		menu
fi
if [ "$int" == "Force Launcher Redownload" ]
	then
		killjava
		rm tl-${tlv}.jar
		installtl
		tl
		tbmenu
fi
if [ "$int" == "Restart Launcher" ]
        then
                notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Restarting Technic Launcher" &
                killjava
                #start Technic again
                tl
        menu
fi
if [ "$int" == "Force Modpack Redownload" ]
	then
		notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Forcing Modpack to Redownload on next launch" &
		killjava
		find $HOME/.technic/ -name 'cache' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'bin' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'lib' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'coremods' -type d | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'mods' -type d  | while read dir; do
			rm -rv "$dir"
		done
		find $HOME/.technic/ -name 'resources' -type d | while read dir; do
			rm -rv "$dir"
		done
		tl
	menu
fi
if [ "$int" == "Fix Sticky Keys" ]
	then
		notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Attempting to Fix Key problem" &
		dllwjgl
	menu
fi
if [ "$int" == "$opt9" ]
	then
		version=`zenity --window-icon="/usr/share/pixmaps/FitMc-logo.png" --info --title "Versions" --text="\`printf "FitMc: ${fitmc} \n Technic Launcher: ${tlv} \n LWJGL: ${lwjglv}"\`"`
		menu
}

#Main menu options
opt1="Install a TexturePack"
opt2="Install a Mod"
opt3="Fix Sticky Keys"
opt4="Restart Launcher"
opt5="Force Launcher Redownload"
opt6="Force Modpack Redownload"
opt7="Quit FitMc"
opt8="Power System off"
opt9="Versions"

####==========================Script===============================####

killjava
installtl
tl
cwm


notify-send -i /usr/share/pixmaps/FitMc-logo.png "FitMc:" "Starting Option menu and technic launcher"

menu
menu
menu
zenity --warning --text "Menu will only open one last time
please exit properly"
menu
/usr/lib/indicator-session/gtk-logout-helper --logout 
